index="raw_nf2" AND canal="MOBILE" AND source="lambda:Splunk-HEC-NF2-MobPF-Az*" AND application IN ("logon-mobile-app", "home-mobile-pf") AND ((classe IN ("br.com.itau.internet.logon.controller.LogonController", "br.com.itau.internet.logon.controller.MobileLogonFidoController", "br.com.itau.internet.logon.controller.MobilePFLogonController", "br.com.itau.internet.home.mobile.pf.controller.MenuMobile", "br.com.itau.internet.logon.controller.MobilePFLogonChaveAcessoController") uri IN ("/doLogonMobile", "/authenticateFido", "/doLogonPFMobile", "/getMenuPF", "/doLogonPFMobileChaveAcesso")) OR (classe="br.com.itau.internet.seguranca.service.impl.LogStepFidoService" codigo="I.SEC.FIDO.REQUEST.SDK_LOGIN_ERROR") OR (logLevel IN ("ERROR","WARN") mensagem="[FIDO]*"))
| fields sessionId uri classe mensagem logLevel userAgent
| eval so=mvindex(split(mvindex(split('userAgent',";"),0),"="),1)
| eval erro=if(classe="br.com.itau.internet.seguranca.service.impl.LogStepFidoService", case(like(mensagem,"%unknown%"),"unknown - ocorreu um erro desconhecido", like(mensagem,"%ERROR_KEY%"),"error_key", like(mensagem,"%GENERIC_ERROR%"),"generic_error", like(mensagem,"%OPERATION_CANCELLED%"),"operation_cacelled", like(mensagem,"%erro login facetouch%"),"erro_login_facetouch", like(mensagem,"%requestRegister%"),"requestRegister - necessário cadastrar o facetouch novamente", like(mensagem,"%unavailable%"),"unavailable - dispositivo autenticador não disponível", like(mensagem,"%notAllowed%"),"notAllowed - credencial não autorizada", like(mensagem,"%BIOMETRIC_ERROR_NONE_ENROLLED%"),"biometric_error_none_enrolled", like(mensagem,"%'timeout'%"),"timeout - operação cancelada por timeout", like(mensagem,"%:null,%"),"null", like(mensagem,"%NSLocalizedDescription=UI canceled by system%"),"UI canceled by system", like(mensagem,"%NSLocalizedDescription=Canceled by another authentication%"),"Canceled by another authentication", like(mensagem,"%NSLocalizedDescription=Canceled by user%"),"Canceled by use", like(mensagem,"%NSLocalizedFailureReason=Found public key, but couldn't find or access private key%"),"Found public key, but couldn't find or access private key", like(mensagem,"%NSLocalizedDescription=Application retry limit exceeded%"),"Application retry limit exceeded", like(mensagem,"%User interaction is required%"),"User interaction is required", like(mensagem,"%BIOMETRIC_ERROR_NO_HARDWARE%"),"biometric_erro_no_hardware", like(mensagem,"%Caller is not running foreground%"),"caller is not running foreground", like(mensagem,"%Remote alert invalidated%"),"remote alert invalidated", like(mensagem,"%Caller moved to background%"),"caller moved to background", like(mensagem,"%Biometry is locked out%"),"niometry is locked out", like(mensagem,"%NOT_ALLOWED_ERR None of the allowed credentials can be authenticated%"),"NOT_ALLOWED_ERR None of the allowed credentials can be authenticated", like(mensagem,"%NOT_ALLOWED_ERR Cannot find credential in local KeyStore or database%"),"NOT_ALLOWED_ERR Cannot find credential in local KeyStore or database", like(mensagem,"%SECURITY_ERR The incoming request cannot be validated%"),"SECURITY_ERR The incoming request cannot be validated", like(mensagem,"%TIMEOUT_ERR Request doesn't finish on time!%"),"TIMEOUT_ERR Request doesn't finish on time!", like(mensagem,"%CONSTRAINT_ERR The device is not secured with any screen lock%"),"CONSTRAINT_ERR The device is not secured with any screen lock", 1=1,mensagem),null)
| eval mensagem=if(classe!="br.com.itau.internet.seguranca.service.impl.LogStepFidoService" AND like(mensagem,"[FIDO]%"),logLevel." | ".mensagem,null)
| eval etapa=case(uri="/doLogonMobile","pre_login", uri="/authenticateFido","fido", uri="/doLogonPFMobile","login_teclado", uri="/getMenuPF","home", uri="/doLogonPFMobileChaveAcesso","faceId_antigo", 1=1,"não identificado")
| stats values(etapa) as etapa values(erro) as erro values(mensagem) as mensagem max(so) as so dc(etapa) as qtd_etapas max(_time) as _time by sessionId
| eval classificacao=case(like(etapa,"%home%") AND like(etapa,"%fido%") AND !like(etapa,"%login_teclado%"),"logon_home_fido", like(etapa,"%home%") AND like(etapa,"%fido%") AND like(etapa,"%login_teclado%"),"login_teclado com falha no fido", like(etapa,"%fido%") AND like(etapa,"%login_teclado%"),"fluxo fido com falha e teclado sem evolução no período", like(etapa,"%fido%") "independente de outras etapas","fluxo fido sem evolução no período", like(etapa,"%home%") AND like(etapa,"%login_teclado%"),"logon_home_teclado", like(etapa,"%home%"),"home", like(etapa,"%login_teclado%") AND !like(etapa,"%home%"),"login_teclado", like(etapa,"%pre_login%") AND !like(etapa,"%home%") AND !like(etapa,"%fido%") AND !like(etapa,"%login_teclado%"),"pre_login sem evolução no período", 1=1,"não classificado")
| where like(so,"%")
| eval funil_prelogin=if(like(etapa,"%pre_login%"),sessionId,null)
| eval funil_fido=if(like(etapa,"%fido%"),sessionId,null)
| where !isNull(funil_prelogin) AND !isNull(funil_fido)
| fields - funil_prelogin funil_fido
| stats dc(sessionId) as total_sessoes by erro mensagem so
| eventstats sum(total_sessoes) as total_geral
| eval percentual_erro = round((total_sessoes / total_geral) * 100, 2) . "%"
| sort total_sessoes desc
| where !(erro="" AND mensagem="") AND mensagem!=""
| addtotals row=false col=true labelfield=erro label="Total"
